'number' + 3 + 3  //number33 - конкатенація

null + 3 // 3 - тому що null перетворюється в 0

5 && "qwerty" // qwerty, тому що оператор && повертає перше false значення. 5 - truth 

+'40' + +'2' + "hillel"; //42hillel - унарний плюс завжди приводить до числа + конкатенація 

'10' - 5 === 6; // false - '10' строка перетворюється в число, 10-5=5. 5 не дарівнює 6

true + false // 1 - неявне перетворення типів: true=1, false=0. 1+0=1

'4px' - 3 // NaN - '4px' не перетворюється в число, тому що є букви, тому це NaN. NaN-3=NaN

'4' - 3 // 1 - перетворення строки в число

'6' + 3 ** 0; // 61 - конкатенація (якщо один з операндів – строка, оператор "+" перетворює все на строку). 3 в степені 0 = 1

12 / '6' // 2 - 6 перетворюється в число 

'10' + (5 === 6); // 10false - 5 не дорівнює 6 - це false. далі конкатенація. 

null == '' // false - null - це порожність, '' – це порожня строка. JS не виконує приведення типів для null та undefined

3 ** (9 / 3); // 27 - 3 в степені 3 = 27

!!'false' == !!'true' // true - оператор !! –  еквівалентний функції Boolean(), але коротше. 'false' і 'true' - це строки, значить true

0 || '0' && 1 // 1 - Пріоритет операторів (&& виконується раніше ||). оператор && повертає перше false або останнє true - 1. оператор || повертає перше true - 1

(+null == false) < 1; // false -  +null - це 0. 0 == false - це true. true < 1 - це false. == - це нестрогое равенство

false && true || true // true - спочатку false && true дає false, потім false || true дає true

false && (false || true); // false -  спочатку false || true дає true, потім false && true дає false

(+null == false) < 1 ** 5; // false - спочатку (+null == false) - це true. потім 1 ** 5 = 1 (возведение в степень). потім  true < 1 = false
